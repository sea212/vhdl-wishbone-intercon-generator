----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 2016-03-05 19:04:37.300388
-- Design Name: Wishbone intercon
-- Module Name: btn_led_intercon
-- Project Name: 
-- Target Devices:
-- Tool Versions:
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 1.00 - File Generated by wishbone intercon generator
-- https://github.com/sea212/vhdl_wishbone_intercon_generator
--
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
--use IEEE.NUMERIC_STD.ALL;

entity intercon is
    Port (  -- General intercon signals
            clk_i : in STD_LOGIC;
            rst_i : in STD_LOGIC;

            -- Wishbone Master
            btn_ctrl_dat_i : out std_logic_vector(31 downto 0);
            btn_ctrl_dat_o : in  std_logic_vector(31 downto 0);
            btn_ctrl_ack_i : out std_logic;
            btn_ctrl_adr_o : in  std_logic_vector(31 downto 0);
            btn_ctrl_cyc_o : in  std_logic;
            btn_ctrl_sel_o : in  std_logic_vector(4 downto 0);
            btn_ctrl_stb_o : in  std_logic;
            btn_ctrl_we_o  : in  std_logic;
			btn_ctrl_err_i : out  std_logic;
			btn_ctrl_rty_i : out  std_logic;
			btn_ctrl_tga_o : in  std_logic_vector(2 downto 0);
			btn_ctrl_tgc_o : in  std_logic_vector(2 downto 0);
			btn_ctrl_tgd_i : out std_logic_vector(2 downto 0);
			btn_ctrl_tgd_o : in  std_logic_vector(2 downto 0);

            -- Wishbone Slaves
            led_ctrl_dat_i : out std_logic_vector(31 downto 0);
            led_ctrl_dat_o : in  std_logic_vector(31 downto 0);
            led_ctrl_ack_o : in std_logic;
            led_ctrl_adr_i : out  std_logic_vector(31 downto 0);
            led_ctrl_cyc_i : out  std_logic;
            led_ctrl_sel_i : out  std_logic_vector(4 downto 0);
            led_ctrl_stb_i : out  std_logic;
            led_ctrl_we_i  : out  std_logic;
			led_ctrl_tga_i : out  std_logic_vector(2 downto 0);
			led_ctrl_tgc_i : out  std_logic_vector(2 downto 0);
			led_ctrl_tgd_i : out std_logic_vector(2 downto 0);
			led_ctrl_tgd_o : in  std_logic_vector(2 downto 0);


        )
end intercon;

architecture Behavioral of intercon is

-- define required signals TODO
signal adr: std_logic_vector(%intabwidth% downto 0);
signal datm2s, dats2m: std_logic_vector(%intdbwidth% downto 0);
signal sel: std_logic_vector(%selwidth% downto 0);

-- define additional signals (err,rty,tga,tgc,tgd)
%additonalsignals%

-- define 1-bit signals
signal we, stb, ack, cyc, tagn1, tagn2: std_logic;

-- define bus grant signals
%busgrant%

begin
    -- interconnect
    interconnect : process (clk_i, rst_i)
    begin
        if (rising_edge(clk)) then
            if (rst_i = '1') then
                --reset
            else
                -- address decoder (slave select)
                %address_decoder%

                -- interconnection
                %interconnection%
    end
end Behavioral;
